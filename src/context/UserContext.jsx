import React, { createContext, useContext, useEffect, useState, useCallback, useRef } from "react";
import Cookies from "js-cookie";
import { toast } from "react-hot-toast";

const UserContext = createContext();

export const UserProvider = ({ children }) => {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [cookieCheckDone, setCookieCheckDone] = useState(false); // –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—É–∫–∏
  const [cookiesBlocked, setCookiesBlocked] = useState(false); // –§–ª–∞–≥ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫—É–∫–∏
  const hasCheckedTokens = useRef(false);
  const hasShownCookieWarning = useRef(false);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫—É–∫–∏ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è)
  const areCookiesEnabled = () => {
    try {
      Cookies.set("testcookie", "test", { expires: 1 });
      const cookieEnabled = Cookies.get("testcookie") === "test";
      Cookies.remove("testcookie");
      return cookieEnabled;
    } catch (e) {
      return false;
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ Safari –Ω–∞ iPhone
  const isSafariOnIPhone = () => {
    const userAgent = navigator.userAgent;
    return (
      /iPhone/i.test(userAgent) &&
      /Safari/i.test(userAgent) &&
      !/CriOS/i.test(userAgent) &&
      !/FxiOS/i.test(userAgent)
    );
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const cookiesEnabled = areCookiesEnabled();
  if (!cookiesEnabled && !hasShownCookieWarning.current) {
    hasShownCookieWarning.current = true;
    setCookiesBlocked(true);
    setUser(null);
    setCookieCheckDone(true);

    const isIPhoneSafari = isSafariOnIPhone();
    const message = isIPhoneSafari ? (
      <div>
        –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –º–µ–∂—Å–∞–π—Ç–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è" –≤ Safari:
        <br />
        1. –û—Ç–∫—Ä–æ–π—Ç–µ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</strong> ‚Üí <strong>Safari</strong>.
        <br />
        2. –í—ã–∫–ª—é—á–∏—Ç–µ <strong>"–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –º–µ–∂—Å–∞–π—Ç–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"</strong>.
        <br />
        –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è{" "}
        <a
          href="https://support.apple.com/ru-ru/guide/safari/sfri40596/mac"
          target="_blank"
          rel="noopener noreferrer"
          className="underline text-blue-600 hover:text-blue-800"
        >
          –∑–¥–µ—Å—å
        </a>.
      </div>
    ) : (
      "–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –∫—É–∫–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞."
    );

    toast.error(message, {
      duration: 10000,
      style: {
        background: "linear-gradient(to right, #fef3c7, #fee2e2)",
        color: "#b91c1c",
        fontWeight: "bold",
        borderRadius: "12px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
        maxWidth: "90%",
        padding: "12px 16px",
        fontSize: "14px",
        lineHeight: "1.5",
      },
    });
  } else if (!cookieCheckDone) {
    setCookieCheckDone(true);
  }

  const refreshAccessToken = useCallback(async () => {
    const refreshToken = Cookies.get("refresh");

    if (!refreshToken) {
      console.warn("‚ùå Refresh —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –í—ã—Ö–æ–¥...");
      await logout();
      return null;
    }

    try {
      console.log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º access —Ç–æ–∫–µ–Ω...");
      const response = await fetch(
        `https://registration-fastapi.onrender.com/validate/jwt/refresh/${refreshToken}`,
        {
          method: "GET",
          credentials: "include",
        }
      );

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: ${response.status}`);
      }

      const data = await response.json();

      if (data === false) {
        console.warn("‚ùå Refresh —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω (—Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª false). –í—ã—Ö–æ–¥...");
        throw new Error("Refresh —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.");
      }

      const newAccessToken = data.access;

      if (!newAccessToken) {
        throw new Error("–ù–æ–≤—ã–π access —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
      }

      Cookies.set("access", newAccessToken, { path: "/", secure: true, sameSite: "None", expires: 1 });
      setUser({ loggedIn: true });

      return newAccessToken;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ access —Ç–æ–∫–µ–Ω–∞:", error);
      await logout();
      return null;
    }
  }, []);

  const fetchWithAuth = useCallback(
    async (url, options = {}) => {
      let accessToken = Cookies.get("access");

      if (!accessToken) {
        console.warn("‚ùå Access —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å...");
        accessToken = await refreshAccessToken();
        if (!accessToken) {
          console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å access —Ç–æ–∫–µ–Ω. –í—ã—Ö–æ–¥...");
          return null;
        }
      }

      const headers = new Headers(options.headers || {});
      headers.set("Authorization", `Bearer ${accessToken}`);

      const response = await fetch(url, {
        ...options,
        headers,
        credentials: "include",
      });

      if (response.status === 401) {
        console.warn("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ 401. –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω...");
        const newAccessToken = await refreshAccessToken();

        if (!newAccessToken) {
          console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω. –í—ã—Ö–æ–¥...");
          return null;
        }

        headers.set("Authorization", `Bearer ${newAccessToken}`);
        return fetch(url, {
          ...options,
          headers,
          credentials: "include",
        });
      }

      return response;
    },
    [refreshAccessToken]
  );

  const logout = useCallback(async () => {
    console.log("‚õî –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥...");

    try {
      const response = await fetch("https://personal-account-fastapi.onrender.com/logout/", {
        method: "GET",
        credentials: "include",
      });

      if (!response.ok) {
        console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ logout:", response.status);
      } else {
        console.log("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ logout:", error);
    }

    console.log("‚õî –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫—É–∫–∏...");
    const cookies = document.cookie.split("; ");
    cookies.forEach((cookie) => {
      const [name] = cookie.split("=");
      Cookies.remove(name, { path: "/", domain: "personal-account-fastapi.onrender.com" });
      Cookies.remove(name, { path: "/" });
    });

    setUser(null);
  }, []);

  const checkTokens = useCallback(async () => {
    if (hasCheckedTokens.current) {
      console.log("‚ÑπÔ∏è checkTokens —É–∂–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...");
      return;
    }
    hasCheckedTokens.current = true;

    setLoading(true);

    try {
      const accessToken = Cookies.get("access");
      const refreshToken = Cookies.get("refresh");

      if (!refreshToken) {
        console.warn("‚ùå Refresh —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.");
        setUser(null);
        setLoading(false);
        return;
      }

      if (!accessToken) {
        console.warn("‚ö†Ô∏è Access —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å...");
        const newAccessToken = await refreshAccessToken();

        if (newAccessToken) {
          const validationResponse = await fetch(
            "https://registration-fastapi.onrender.com/validate/jwt/access",
            {
              method: "GET",
              headers: {
                Authorization: `Bearer ${newAccessToken}`,
              },
              credentials: "include",
            }
          );

          if (validationResponse.ok) {
            setUser({ loggedIn: true });
          } else {
            console.warn("‚ùå –ù–æ–≤—ã–π access —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.");
            await logout();
            setUser(null);
          }
        } else {
          setUser(null);
        }
      } else {
        const validationResponse = await fetch(
          "https://registration-fastapi.onrender.com/validate/jwt/access",
          {
            method: "GET",
            headers: {
              Authorization: `Bearer ${accessToken}`,
            },
            credentials: "include",
          }
        );

        if (validationResponse.ok) {
          setUser({ loggedIn: true });
        } else {
          console.warn("‚ö†Ô∏è Access —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å...");
          const newAccessToken = await refreshAccessToken();

          if (newAccessToken) {
            setUser({ loggedIn: true });
          } else {
            setUser(null);
          }
        }
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–æ–≤:", error);
      setUser(null);
    } finally {
      setLoading(false);
    }
  }, [refreshAccessToken]);

  useEffect(() => {
    if (!cookiesBlocked) {
      checkTokens();

      const interval = setInterval(() => {
        console.log("üîÑ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤...");
        checkTokens();
      }, 5 * 60 * 1000);

      return () => {
        console.log("üõë –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤...");
        clearInterval(interval);
      };
    }
  }, [checkTokens, cookiesBlocked]);

  const login = (access, refresh) => {
    if (typeof access !== "string" || typeof refresh !== "string") {
      throw new Error("–¢–æ–∫–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞–º–∏!");
    }

    Cookies.set("access", access, { path: "/", secure: true, sameSite: "None", expires: 1 });
    const currentRefresh = Cookies.get("refresh");
    if (!currentRefresh || currentRefresh !== refresh) {
      Cookies.set("refresh", refresh, { path: "/", secure: true, sameSite: "None", expires: 7 });
    } else {
      console.log("‚ÑπÔ∏è Refresh —Ç–æ–∫–µ–Ω –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.");
    }

    setUser({ loggedIn: true });
  };

  // –ï—Å–ª–∏ –∫—É–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (cookiesBlocked) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="bg-white/95 backdrop-blur-lg p-8 sm:p-10 rounded-3xl shadow-2xl max-w-md w-full mx-4 border border-blue-100/50 text-center">
          <h2 className="text-2xl sm:text-3xl font-bold mb-4 sm:mb-6 text-blue-900 tracking-tight">
            –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∫—É–∫–∏
          </h2>
          <p className="text-gray-600 text-sm sm:text-base mb-6 sm:mb-8">
            {isSafariOnIPhone() ? (
              <>
                –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É "–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –º–µ–∂—Å–∞–π—Ç–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è" –≤ Safari:
                <br />
                1. –û—Ç–∫—Ä–æ–π—Ç–µ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</strong> ‚Üí <strong>Safari</strong>.
                <br />
                2. –í—ã–∫–ª—é—á–∏—Ç–µ <strong>"–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –º–µ–∂—Å–∞–π—Ç–æ–≤–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"</strong>.
                <br />
                –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è{" "}
                <a
                  href="https://support.apple.com/ru-ru/guide/safari/sfri40596/mac"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="underline text-blue-600 hover:text-blue-800"
                >
                  –∑–¥–µ—Å—å
                </a>.
              </>
            ) : (
              "–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –∫—É–∫–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞."
            )}
          </p>
          <button
            onClick={() => window.location.reload()}
            className="bg-gradient-to-r from-blue-500 to-indigo-500 text-white font-semibold py-2 sm:py-3 px-6 sm:px-8 rounded-xl shadow-md transition-all hover:bg-blue-600 hover:shadow-blue-400/50 hover:scale-105 active:scale-95"
          >
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–∫–∏ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (!cookieCheckDone) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="bg-white/95 backdrop-blur-lg p-8 sm:p-10 rounded-3xl shadow-2xl max-w-md w-full mx-4 border border-blue-100/50 text-center">
          <div className="flex justify-center mb-6 sm:mb-8">
            <svg
              className="w-16 h-16 sm:w-20 sm:h-20 text-blue-600 animate-spin-slow"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"
              />
            </svg>
          </div>
          <h2 className="text-2xl sm:text-3xl font-bold text-center mb-4 sm:mb-6 text-blue-900 tracking-tight">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...
          </h2>
          <div className="relative w-full h-3 sm:h-4 bg-gray-200 rounded-full overflow-hidden shadow-inner">
            <div className="absolute top-0 left-0 h-full bg-gradient-to-r from-blue-500 to-indigo-500 animate-load" />
          </div>
        </div>
      </div>
    );
  }

  return (
    <UserContext.Provider value={{ user, login, logout, loading, fetchWithAuth }}>
      {children}
    </UserContext.Provider>
  );
};

export const useUser = () => useContext(UserContext);